{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaewoo/Desktop/D-Fund/src/components/Main.js\",\n  _s = $RefreshSig$();\n// Main.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert('Please install Metamask!');\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n    } catch (err) {\n      console.error('Wallet connection failed:', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '2rem',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Welcome to D-Fund\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Decentralized Crowdfunding Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), walletAddress ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Connected Wallet:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 12\n      }, this), \" \", walletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"\\uD83D\\uDD17 Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"SM6J6Jv3vxLi47+RieKFbfI3nq0=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","ethers","jsxDEV","_jsxDEV","Main","_s","walletAddress","setWalletAddress","connectWallet","window","ethereum","alert","provider","providers","Web3Provider","send","signer","getSigner","address","getAddress","err","console","error","style","padding","textAlign","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kimtaewoo/Desktop/D-Fund/src/components/Main.js"],"sourcesContent":["// Main.js\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\n\nfunction Main() {\n  const [walletAddress, setWalletAddress] = useState('');\n\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert('Please install Metamask!');\n      return;\n    }\n\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send('eth_requestAccounts', []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n    } catch (err) {\n      console.error('Wallet connection failed:', err);\n    }\n  };\n\n  return (\n    <div style={{ padding: '2rem', textAlign: 'center' }}>\n      <h2>Welcome to D-Fund</h2>\n      <p>Decentralized Crowdfunding Platform</p>\n\n      {walletAddress ? (\n        <p><strong>Connected Wallet:</strong> {walletAddress}</p>\n      ) : (\n        <button onClick={connectWallet}>ðŸ”— Connect Wallet</button>\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMQ,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI,CAACC,MAAM,CAACC,QAAQ,EAAE;MACpBC,KAAK,CAAC,0BAA0B,CAAC;MACjC;IACF;IAEA,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIX,MAAM,CAACY,SAAS,CAACC,YAAY,CAACL,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAME,QAAQ,CAACG,IAAI,CAAC,qBAAqB,EAAE,EAAE,CAAC;MAC9C,MAAMC,MAAM,GAAGJ,QAAQ,CAACK,SAAS,CAAC,CAAC;MACnC,MAAMC,OAAO,GAAG,MAAMF,MAAM,CAACG,UAAU,CAAC,CAAC;MACzCZ,gBAAgB,CAACW,OAAO,CAAC;IAC3B,CAAC,CAAC,OAAOE,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEF,GAAG,CAAC;IACjD;EACF,CAAC;EAED,oBACEjB,OAAA;IAAKoB,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE;IAAS,CAAE;IAAAC,QAAA,gBACnDvB,OAAA;MAAAuB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B3B,OAAA;MAAAuB,QAAA,EAAG;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEzCxB,aAAa,gBACZH,OAAA;MAAAuB,QAAA,gBAAGvB,OAAA;QAAAuB,QAAA,EAAQ;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,EAACxB,aAAa;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,gBAEzD3B,OAAA;MAAQ4B,OAAO,EAAEvB,aAAc;MAAAkB,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAC1D;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACzB,EAAA,CAhCQD,IAAI;AAAA4B,EAAA,GAAJ5B,IAAI;AAkCb,eAAeA,IAAI;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}