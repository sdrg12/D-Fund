{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaewoo/Desktop/D-Fund/src/components/Main.js\",\n  _s = $RefreshSig$();\n// Main.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  const [walletAddress, setWalletAddress] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n\n  // ÏûêÎèôÏúºÎ°ú Metamask ÏÉÅÌÉú ÌôïÏù∏\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_accounts'\n      }).then(accounts => {\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          setIsConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  // ÏßÄÍ∞ë Ïó∞Í≤∞ Ìï®Ïàò\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"Please install Metamask to use this feature.\");\n      return;\n    }\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n      setWalletAddress(address);\n      setIsConnected(true);\n\n      // (ÏÑ†ÌÉù) ÏÑúÎ≤ÑÎ°ú Ï£ºÏÜå Ï†ÑÎã¨ ‚Äì ÌöåÏõê Ï†ïÎ≥¥ Ïó∞Îèô Ïãú ÏÇ¨Ïö©\n      /*\n      await fetch('/api/saveWallet', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ walletAddress: address })\n      });\n      */\n    } catch (err) {\n      console.error(\"Wallet connection failed:\", err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\",\n      fontFamily: \"sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"D-Fund Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Decentralized Crowdfunding Platform\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), !isConnected ? /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"\\uD83D\\uDD17 Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u2705 Wallet Connected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Address:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 14\n        }, this), \" \", walletAddress]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"NEmibQj1whUpfGBGeXF2Fx+803k=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","ethers","jsxDEV","_jsxDEV","Main","_s","walletAddress","setWalletAddress","isConnected","setIsConnected","window","ethereum","request","method","then","accounts","length","connectWallet","alert","provider","providers","Web3Provider","send","signer","getSigner","address","getAddress","err","console","error","style","padding","fontFamily","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/kimtaewoo/Desktop/D-Fund/src/components/Main.js"],"sourcesContent":["// Main.js\nimport React, { useState, useEffect } from 'react';\nimport { ethers } from 'ethers';\n\nfunction Main() {\n  const [walletAddress, setWalletAddress] = useState('');\n  const [isConnected, setIsConnected] = useState(false);\n\n  // ÏûêÎèôÏúºÎ°ú Metamask ÏÉÅÌÉú ÌôïÏù∏\n  useEffect(() => {\n    if (window.ethereum) {\n      window.ethereum.request({ method: 'eth_accounts' }).then((accounts) => {\n        if (accounts.length > 0) {\n          setWalletAddress(accounts[0]);\n          setIsConnected(true);\n        }\n      });\n    }\n  }, []);\n\n  // ÏßÄÍ∞ë Ïó∞Í≤∞ Ìï®Ïàò\n  const connectWallet = async () => {\n    if (!window.ethereum) {\n      alert(\"Please install Metamask to use this feature.\");\n      return;\n    }\n\n    try {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      await provider.send(\"eth_requestAccounts\", []);\n      const signer = provider.getSigner();\n      const address = await signer.getAddress();\n\n      setWalletAddress(address);\n      setIsConnected(true);\n\n      // (ÏÑ†ÌÉù) ÏÑúÎ≤ÑÎ°ú Ï£ºÏÜå Ï†ÑÎã¨ ‚Äì ÌöåÏõê Ï†ïÎ≥¥ Ïó∞Îèô Ïãú ÏÇ¨Ïö©\n      /*\n      await fetch('/api/saveWallet', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ walletAddress: address })\n      });\n      */\n    } catch (err) {\n      console.error(\"Wallet connection failed:\", err);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"2rem\", fontFamily: \"sans-serif\" }}>\n      <h1>D-Fund Project</h1>\n      <p>Decentralized Crowdfunding Platform</p>\n\n      {!isConnected ? (\n        <button onClick={connectWallet}>üîó Connect Wallet</button>\n      ) : (\n        <div>\n          <p>‚úÖ Wallet Connected</p>\n          <p><strong>Address:</strong> {walletAddress}</p>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}